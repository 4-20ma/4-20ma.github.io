<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[How to use Git to sync forked repositories]]></title>
      <url>https://4-20ma.io/2016/09/07/howto-use-git-sync-forked-repositories/</url>
      <content type="html"><![CDATA[<h4 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h4><p>This post describes how to use <code>git</code> to sync forked repositories.</p>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p>I frequently need to look up the exact series of commands needed to sync with an upstream repository. This post is primarily for my convenience, but may be useful to others as well.</p>
<a id="more"></a>
<h4 id="Fork"><a href="#Fork" class="headerlink" title="Fork"></a>Fork</h4><p>Fork the repository by clicking <strong>[ <nop class="fa fa-code-fork"> Fork ]</nop></strong> from your source code repository website. We’ll use <code>SOME-REPO</code>, in this example.</p>
<h4 id="Clone"><a href="#Clone" class="headerlink" title="Clone"></a>Clone</h4><p>Create a local clone of your fork and configure <code>git</code> to sync your fork with the original:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/YOUR-USERNAME/SOME-REPO</div><div class="line">$ git remote add upstream https://github.com/ORIGINAL-USER/SOME-REPO</div></pre></td></tr></table></figure>
<h4 id="Contribute"><a href="#Contribute" class="headerlink" title="Contribute"></a>Contribute</h4><p>Hack on code in your fork; make <nop class="fa fa-github"> Pull Requests / <nop class="fa fa-gitlab"> Merge Requests.</nop></nop></p>
<h4 id="Sync"><a href="#Sync" class="headerlink" title="Sync"></a>Sync</h4><p>Sync your fork to keep it up-to-date with the upstream repository:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git fetch origin -v</div><div class="line">$ git fetch upstream -v</div><div class="line">$ git merge upstream/master</div></pre></td></tr></table></figure>
<h4 id="Simplify"><a href="#Simplify" class="headerlink" title="Simplify"></a>Simplify</h4><p>Assign a <code>git</code> alias to perform the sync steps for you:</p>
<figure class="highlight"><figcaption><span>~/.gitconfig</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[alias]</div><div class="line">  pu = !"git fetch origin -v; git fetch upstream -v; git merge upstream/master"</div></pre></td></tr></table></figure>
<p>Usage:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git pu</div><div class="line">From https://github.com/YOUR-USERNAME/SOME-REPO</div><div class="line"> = [up to date]      master     -&gt; origin/master</div><div class="line">From https://github.com/ORIGINAL-USER/SOME-REPO</div><div class="line"> = [up to date]      master     -&gt; upstream/master</div><div class="line">Already up-to-date.</div></pre></td></tr></table></figure>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>Perform the <strong>Fork</strong> &amp; <strong>Clone</strong> steps once for each forked repository. <strong>Contribute</strong> regularly. <strong>Sync</strong> often.</p>
<p>((( <nop class="fa fa-glass"> - Party like a rock star! - <nop class="fa fa-music"> )))</nop></nop></p>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p><nop class="fa fa-github"> | Github Bootcamp / <a href="https://help.github.com/articles/fork-a-repo/" target="_blank" rel="external">Fork A Repo</a></nop></p>
<p><nop class="fa fa-github"> | Github Guides / <a href="https://guides.github.com/activities/forking/" target="_blank" rel="external">Forking Projects</a></nop></p>
<p><nop class="fa fa-gitlab"> | Gitlab / <a href="http://docs.gitlab.com/ce/gitlab-basics/fork-project.html" target="_blank" rel="external">How to fork a project</a></nop></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to create an RPM package using Chef, Test Kitchen]]></title>
      <url>https://4-20ma.io/2014/12/26/howto-create-rpm-package-using-chef-test-kitchen/</url>
      <content type="html"><![CDATA[<p>This post describes how to leverage Chef and Test Kitchen to create a pristine virtual machine from which to create an RPM package.</p>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p>I needed customized versions of the <strong>FcgiWrap</strong> and <strong>Postfix</strong> RPM packages and preferred to develop a method that would allow me to periodically update the packages as new versions of the upstream source were released. Vagrant is a great tool for managing virtual machines and I was originally going to use this to provision a new VM to build the packages. I developed Chef cookbooks to provision the VMs, and while developing integration tests for the provisioners, I realized that it was more effective to use Test Kitchen to build and test my VMs (which itself uses Vagrant).</p>
<a id="more"></a>
<h4 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h4><p>The following are required:</p>
<ul>
<li>Git (v2.2.1 used)</li>
<li>Ruby (v2.1.5 used)</li>
<li>Chef (v11.16.4 used)</li>
<li>Test Kitchen (v1.2.1 used)</li>
<li>Vagrant (v1.6.5 used)</li>
<li>Virtual machine (Parallels 10.0.0 used, but VirtualBox works as well)</li>
</ul>
<h4 id="Example-FcgiWrap"><a href="#Example-FcgiWrap" class="headerlink" title="Example / FcgiWrap"></a>Example / FcgiWrap</h4><p>Clone the repository and use <code>kitchen</code> to converge the node:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/4-20ma/cookbook-fcgiwrap_rpm</div><div class="line">$ <span class="built_in">cd</span> cookbook-fcgiwrap_rpm</div><div class="line">$ bundle <span class="built_in">exec</span> kitchen converge</div><div class="line">...</div><div class="line">$ tree .products/</div><div class="line">.products/</div><div class="line">└── fcgiwrap-1.1.0-1.el6.x86_64.rpm</div></pre></td></tr></table></figure>
<p>You can now transfer the <code>.rpm</code> file to the target machine(s) and install via <code>rpm</code> or <code>yum</code>.</p>
<h4 id="Example-Postfix"><a href="#Example-Postfix" class="headerlink" title="Example / Postfix"></a>Example / Postfix</h4><p>Clone the repository and use <code>kitchen</code> to converge the node:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/4-20ma/cookbook-postfix_rpm</div><div class="line">$ <span class="built_in">cd</span> cookbook-postfix_rpm</div><div class="line">$ bundle <span class="built_in">exec</span> kitchen converge</div><div class="line">...</div><div class="line">$ tree .products/</div><div class="line">.products/</div><div class="line">├── postfix-2.11.1-0.el6.x86_64.rpm</div><div class="line">└── postfix-perl-scripts-2.11.1-0.el6.x86_64.rpm</div></pre></td></tr></table></figure>
<p>You can now transfer the <code>.rpm</code> file to the target machine(s) and install via <code>rpm</code> or <code>yum</code>.</p>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>Test Kitchen is not only effective at performing integration testing for a Chef cookbook, it is also useful to spin up a pristine virtual machine to perform tasks such as building an RPM package.</p>
<p>((( <nop class="fa fa-glass"> - <nop class="fa fa-music"> )))</nop></nop></p>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p>Cookbook Sources:</p>
<ul>
<li><nop class="fa fa-github"> <a href="https://github.com/4-20ma" target="_blank" rel="external">4-20ma</a> / <a href="https://github.com/4-20ma/cookbook-fcgiwrap_rpm" target="_blank" rel="external">FcgiWrap RPM Cookbook</a> – builds FcgiWrap RPM</nop></li>
<li><nop class="fa fa-github"> <a href="https://github.com/4-20ma" target="_blank" rel="external">4-20ma</a> / <a href="https://github.com/4-20ma/cookbook-postfix_rpm" target="_blank" rel="external">Postfix RPM Cookbook</a> – builds Postfix RPM</nop></li>
</ul>
<p>3rd party software used (alphabetical):</p>
<ul>
<li><a href="https://www.chef.io" target="_blank" rel="external">Chef</a></li>
<li><nop class="fa fa-github"> <a href="https://github.com/schnell18" target="_blank" rel="external">schnell18</a> / <a href="https://github.com/schnell18/fcgiwrap" target="_blank" rel="external">FcgiWrap Source</a></nop></li>
<li><nop class="fa fa-git-square"> <a href="https://git-scm.com" target="_blank" rel="external">Git</a></nop></li>
<li><a href="http://www.parallels.com" target="_blank" rel="external">Parallels</a></li>
<li><a href="http://www.postfix.org" target="_blank" rel="external">Postfix</a></li>
<li><a href="https://www.ruby-lang.org/en/" target="_blank" rel="external">Ruby</a></li>
<li><a href="http://kitchen.ci" target="_blank" rel="external">Test Kitchen</a></li>
<li><a href="https://www.vagrantup.com" target="_blank" rel="external">Vagrant</a></li>
<li><a href="https://www.virtualbox.org" target="_blank" rel="external">VirtualBox</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to mount a remote file system over ssh]]></title>
      <url>https://4-20ma.io/2014/03/17/howto-mount-remote-file-system-over-ssh/</url>
      <content type="html"><![CDATA[<p>The following post describes how to mount a remote file system over <code>ssh</code> on Mac OS X 10.9.2. With minor modifications, the same thing can be achieved on other platforms.</p>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p>I recently needed to manipulate a <code>sqlite</code> database on a virtual machine and my gui tool lacked the ability to tunnel over <code>ssh</code>.</p>
<p>Enter <code>sshfs</code>: Secure SHell FileSystem – a file system for Linux (and other operating systems with a FUSE implementation, such as Mac OS X or FreeBSD) capable of operating on files on a remote computer using just a secure shell login on the remote computer.</p>
<a id="more"></a>
<p>In the example below, I’m mounting a file system from a VirtualBox virtual machine controlled by <code>vagrant</code> (which happens to use port 2200 on the loopback address 127.0.0.1).</p>
<h4 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h4><ul>
<li>Mac OS X 10.9.2</li>
<li><a href="http://brew.sh" target="_blank" rel="external">Homebrew</a></li>
</ul>
<h4 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h4><p>Install <code>sshfs</code> via Homebrew:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install sshfs</div></pre></td></tr></table></figure>
<p>Follow instructions for <code>osxfuse</code> (refer to <code>brew info osxfuse</code>):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mount -t osxfusefs</div><div class="line">$ sudo kextunload -b com.github.osxfuse.filesystems.osxfusefs</div><div class="line">$ sudo /bin/cp -RfX /usr/<span class="built_in">local</span>/Cellar/osxfuse/2.6.2/Library/Filesystems/osxfusefs.fs /Library/Filesystems</div><div class="line">$ sudo chmod +s /Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs</div></pre></td></tr></table></figure>
<p>The remote file system is now mounted at <code>/Volumes/mount_name</code> and one can access files via Mac OS applications and/or the Finder.</p>
<h4 id="Unmount"><a href="#Unmount" class="headerlink" title="Unmount"></a>Unmount</h4><p>Close any open files and <code>cd</code> out of the <code>mount_name</code> directory before executing the following command to unmount the remote file system:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ umount /Volumes/mount_name</div></pre></td></tr></table></figure>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p><code>sshfs</code> is a lightweight solution to efficiently mount a remote file system for local access.</p>
<h4 id="Reference-s"><a href="#Reference-s" class="headerlink" title="Reference(s)"></a>Reference(s)</h4><ul>
<li><a href="https://github.com/libfuse/sshfs" target="_blank" rel="external">SSH Filesystem</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to remove a Git submodule]]></title>
      <url>https://4-20ma.io/2013/08/21/howto-remove-git-submodule/</url>
      <content type="html"><![CDATA[<h4 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h4><blockquote><p>It often happens that while working on one project, you need to use another project from within it. Perhaps it’s a library that a third party developed or that you’re developing separately and using in multiple parent projects. A common issue arises in these scenarios: you want to be able to treat the two projects as separate yet still be able to use one from within the other.</p>
<footer><strong>Scott Chacon and Ben Straub</strong><cite><a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="external">Pro Git</a></cite></footer></blockquote>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p>I frequently need to look up the exact series of commands remove a git submodule. This post is primarily for my convenience, but may be useful to others as well.</p>
<a id="more"></a>
<h4 id="Modify"><a href="#Modify" class="headerlink" title="Modify"></a>Modify</h4><p>Remove the relevant <code>submodule</code> section from each of the following files:</p>
<figure class="highlight"><figcaption><span>.gitmodules</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">[submodule "vendor"]</div><div class="line">  path = vendor</div><div class="line">  url = git://github.com/some-user/some-repo.git</div><div class="line">...</div></pre></td></tr></table></figure>
<figure class="highlight"><figcaption><span>.git/config</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">[submodule "vendor"]</div><div class="line">  url = git://github.com/some-user/some-repo.git</div><div class="line">...</div></pre></td></tr></table></figure>
<h4 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h4><ol>
<li>Stage changed <code>.gitmodules</code> file</li>
<li>Unstage and remove submodule path from the index (don’t include a trailing slash – that will lead to an error)</li>
<li>Remove submodule files from index</li>
<li>Commit the changes</li>
<li>Remove submodule files</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git add .gitmodules</div><div class="line">$ git rm --cached path/to/submodule</div><div class="line">$ rm -rf .git/modules/submodule_name</div><div class="line">$ git commit</div><div class="line">$ rm -rf path/to/submodule</div></pre></td></tr></table></figure>
<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>Removing a submodule can be a tedious task, but can be accomplished by following the tasks in this post.</p>
<p>((( <nop class="fa fa-glass"> - Enjoy your lighter repository. - <nop class="fa fa-music"> )))</nop></nop></p>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p><nop class="fa fa-git-square"> | Git Reference / <a href="https://git-scm.com/docs/git-submodule" target="_blank" rel="external">git-submodule</a></nop></p>
<p><nop class="fa fa-git-square"> | Pro Git &gt; Git Tools / <a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="external">Submodules</a></nop></p>
<p><nop class="fa fa-external-link"> | David Walsh / <a href="https://davidwalsh.name/git-remove-submodule" target="_blank" rel="external">Remove a Submodule</a></nop></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to package a jQuery plugin as a gem for Rails 3.1 asset pipeline]]></title>
      <url>https://4-20ma.io/2013/07/28/howto-package-jquery-plugin-gem-rails-31-asset-pipeline/</url>
      <content type="html"><![CDATA[<p>Follow the instructions to <a href="http://www.prioritized.net/blog/gemify-assets-for-rails" target="_blank" rel="external">Gemify Assets for Rails</a>. Refer to <a href="http://railscasts.com/episodes/245-new-gem-with-bundler" target="_blank" rel="external">RailsCast #245</a> for more information on packaging a gem.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[How to add GitHub Pages to a project]]></title>
      <url>https://4-20ma.io/2013/01/02/howto-add-github-pages/</url>
      <content type="html"><![CDATA[<h4 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h4><p>GitHub Pages is a static site hosting service and is designed to host personal, organization, or project pages directly from a GitHub repository.</p>
<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p>I occasionally need to add GitHub Pages (gh-pages) to a project. These instructions are based on a GitHub help <a href="https://help.github.com/articles/creating-project-pages-from-the-command-line/" target="_blank" rel="external">article</a> and have been customized for my use.</p>
<a id="more"></a>
<h4 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h4><p>Create orphan <code>gh-pages</code> branch in <code>doc/html</code> directory:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> doc/html</div><div class="line">$ git init</div><div class="line">$ git remote add origin `git config --file ../../.git/config remote.origin.url`</div><div class="line">$ git checkout --orphan gh-pages</div><div class="line">$ git rm -rf .</div></pre></td></tr></table></figure>
<p>Create initial commit:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ touch index.html</div><div class="line">$ git add .</div><div class="line">$ git commit -m <span class="string">'Initial commit'</span></div></pre></td></tr></table></figure>
<p>Configure <code>gh-pages</code> branch:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git config branch.gh-pages.remote origin              <span class="comment"># optional</span></div><div class="line">$ git config branch.gh-pages.merge refs/heads/gh-pages  <span class="comment"># optional</span></div><div class="line">$ git push origin gh-pages</div></pre></td></tr></table></figure>
<p>((( <nop class="fa fa-glass"> - Enjoy responsibly. - <nop class="fa fa-music"> )))</nop></nop></p>
<h4 id="References"><a href="#References" class="headerlink" title="References"></a>References</h4><p><nop class="fa fa-github"> | GitHub Help / <a href="https://help.github.com/categories/github-pages-basics/" target="_blank" rel="external">GitHub Pages Basics</a></nop></p>
<p><nop class="fa fa-github"> | GitHub Help / <a href="https://help.github.com/articles/creating-project-pages-from-the-command-line/" target="_blank" rel="external">Creating Project Pages from the command line</a></nop></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Arduino library for Texas Instruments PCF8575C 16-bit I2C I/O expander]]></title>
      <url>https://4-20ma.io/2012/12/31/arduino-library-texas-instruments-pcf8575c/</url>
      <content type="html"><![CDATA[<p><code>I2cDiscreteIoExpander</code> is an Arduino library for the Texas Instruments PCF8575C 16-bit I2C I/O expander.</p>
<p>The PCF8575C provides general-purpose remote I/O expansion for most microcontroller families via the I2C interface serial clock (SCL) and serial data (SDA).</p>
<a id="more"></a>
<p>The device features a 16-bit quasi-bidirectional input/output (I/O) port (P07..P00, P17..P10), including latched outputs with high-current drive capability for directly driving LEDs. Each quasi-bidirectional I/O can be used as an input or output without the use of a data-direction control signal. At power on, the I/Os are in 3-state mode. The strong pullup to VCC allows fast-rising edges into heavily loaded outputs. This device turns on when an output is written high and is switched off by the negative edge of SCL. The I/Os should be high before being used as inputs. After power on, as all the I/Os are set to 3-state, all of them can be used as inputs. Any change in setting of the I/Os as either inputs or outputs can be done with the write mode. If a high is applied externally to an I/O that has been written earlier to low, a large current (IOL) flows to GND.</p>
<p>The fixed I2C address of the PCF8575C is the same as the PCF8575, PCF8574, PCA9535, and PCA9555, allowing up to eight of these devices, in any combination, to share the same I2C bus or SMBus.</p>
<p>View Source: <nop class="fa fa-github"> <a href="https://github.com/4-20ma" target="_blank" rel="external">4-20ma</a> / <a href="https://github.com/4-20ma/I2cDiscreteIoExpander" target="_blank" rel="external">I2cDiscreteIoExpander</a>.</nop></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Arduino library for Texas Instruments ADS7828 12-bit, 8-channel I2C A/D converter]]></title>
      <url>https://4-20ma.io/2012/12/29/arduino-library-texas-instruments-ads7828/</url>
      <content type="html"><![CDATA[<p><code>i2c_adc_ads7828</code> has a new home: <nop class="fa fa-github"> <a href="https://github.com/4-20ma" target="_blank" rel="external">4-20ma</a> / <a href="https://github.com/4-20ma/i2c_adc_ads7828" target="_blank" rel="external">i2c_adc_ads7828</a>.</nop></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Arduino library for communicating with Modbus slaves over RS232/485 (via RTU protocol)]]></title>
      <url>https://4-20ma.io/2012/12/28/arduino-library-communicating-with-modbus-slaves-over-rs232-485-via-rtu-protocol/</url>
      <content type="html"><![CDATA[<p><code>ModbusMaster</code> has a new home: <nop class="fa fa-github"> <a href="https://github.com/4-20ma" target="_blank" rel="external">4-20ma</a> / <a href="https://github.com/4-20ma/ModbusMaster" target="_blank" rel="external">ModbusMaster</a>.</nop></p>
]]></content>
    </entry>
    
  
  
</search>
